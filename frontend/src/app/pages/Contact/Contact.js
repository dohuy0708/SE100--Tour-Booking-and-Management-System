import React, { useState } from "react";

export default function Contact() {
  // State l∆∞u tr·ªØ d·ªØ li·ªáu form
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    phone: "",
    address: "",
    message: "",
  });

  // State l∆∞u l·ªói validation
  const [errors, setErrors] = useState({});

  // H√†m c·∫≠p nh·∫≠t d·ªØ li·ªáu form
  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value,
    });
  };

  // H√†m ki·ªÉm tra validation
  const validateForm = () => {
    const newErrors = {};
    if (!formData.name.trim()) newErrors.name = "H·ªç & t√™n kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng.";
    if (!formData.email.trim()) {
      newErrors.email = "Email kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng.";
    } else if (!/\S+@\S+\.\S+/.test(formData.email)) {
      newErrors.email = "Email kh√¥ng h·ª£p l·ªá.";
    }
    if (!formData.phone.trim()) {
      newErrors.phone = "ƒêi·ªán tho·∫°i kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng.";
    } else if (!/^\d{10,11}$/.test(formData.phone)) {
      newErrors.phone = "S·ªë ƒëi·ªán tho·∫°i ph·∫£i c√≥ 10-11 ch·ªØ s·ªë.";
    }
    if (!formData.address.trim())
      newErrors.address = "ƒê·ªãa ch·ªâ kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng.";
    if (!formData.message.trim())
      newErrors.message = "N·ªôi dung kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng.";

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0; // Tr·∫£ v·ªÅ `true` n·∫øu kh√¥ng c√≥ l·ªói
  };

  // H√†m x·ª≠ l√Ω g·ª≠i form
  const handleSubmit = (e) => {
    e.preventDefault();
    if (validateForm()) {
      console.log("D·ªØ li·ªáu g·ª≠i ƒëi:", formData);

      // G·ª≠i d·ªØ li·ªáu ƒë·∫øn API (gi·∫£ l·∫≠p)
      setTimeout(() => {
        alert("Th√¥ng tin ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng!");
        setFormData({
          name: "",
          email: "",
          phone: "",
          address: "",
          message: "",
        });
      }, 500);
    }
  };
  return (
    <div className="bg-gray-100">
      <div className="grid grid-cols-1 gap-4 lg:grid-cols-3  min-h-mincontent py-6 mx-32">
        {/* Th√¥ng tin li√™n h·ªá */}
        <div className=" col-span-1  w-full bg-white rounded-lg shadow-lg p-6 space-y-6">
          <h2 className="text-xl font-bold text-gray-800">
            C√¥ng ty TNHH 5H - BANANA
          </h2>
          <div className="space-y-4">
            <div className="flex items-start">
              <div className="text-main text-2xl mr-4">üìç</div>
              <div>
                <p className="font-semibold text-gray-700">ƒê·ªãa ch·ªâ:</p>
                <p className="text-gray-600">
                  Khu ph·ªë 6, Ph∆∞·ªùng Linh Trung, Qu·∫≠n Th·ªß ƒê·ª©c, TP.HCM
                </p>
              </div>
            </div>
            <div className="flex items-start">
              <div className="text-main text-2xl mr-4">üìû</div>
              <div>
                <p className="font-semibold text-gray-700">
                  T∆∞ v·∫•n & ƒë·∫∑t d·ªãch v·ª•:
                </p>
                <p className="text-gray-600">ƒêi·ªán tho·∫°i: (84-28) 38 279 279</p>
                <p className="text-gray-600">Hotline: 1900 1808</p>
              </div>
            </div>
            <div className="flex items-start">
              <div className="text-main text-2xl mr-4">‚úâÔ∏è</div>
              <div>
                <p className="font-semibold text-gray-700">Email:</p>
                <p className="text-gray-600">uit@gmail.com</p>
              </div>
            </div>
          </div>
        </div>

        <div className="col-span-2 w-full bg-white rounded-lg shadow-lg p-6 space-y-4">
          <h2 className="text-xl font-bold text-gray-800">Li√™n H·ªá</h2>
          <form onSubmit={handleSubmit} className="space-y-4">
            {/* H·ªç v√† T√™n */}
            <div>
              <input
                type="text"
                name="name"
                value={formData.name}
                onChange={handleChange}
                placeholder="H·ªç & t√™n"
                className={`w-full p-2 border rounded-lg focus:ring-2 focus:outline-none ${
                  errors.name
                    ? "border-red focus:ring-red"
                    : "border-gray-300 focus:ring-main"
                }`}
              />
              {errors.name && (
                <p className="text-red text-sm mt-1">{errors.name}</p>
              )}
            </div>

            {/* Email */}
            <div>
              <input
                type="text"
                name="email"
                value={formData.email}
                onChange={handleChange}
                placeholder="Email"
                className={`w-full p-2 border rounded-lg focus:ring-2 focus:outline-none ${
                  errors.email
                    ? "border-red focus:ring-red"
                    : "border-gray-300 focus:ring-main"
                }`}
              />
              {errors.email && (
                <p className="text-red text-sm mt-1">{errors.email}</p>
              )}
            </div>

            {/* ƒêi·ªán tho·∫°i */}
            <div>
              <input
                type="text"
                name="phone"
                value={formData.phone}
                onChange={handleChange}
                placeholder="ƒêi·ªán tho·∫°i"
                className={`w-full p-2 border rounded-lg focus:ring-2 focus:outline-none ${
                  errors.phone
                    ? "border-red focus:ring-red"
                    : "border-gray-300 focus:ring-main"
                }`}
              />
              {errors.phone && (
                <p className="text-red text-sm mt-1">{errors.phone}</p>
              )}
            </div>

            {/* ƒê·ªãa ch·ªâ */}
            <div>
              <input
                type="text"
                name="address"
                value={formData.address}
                onChange={handleChange}
                placeholder="ƒê·ªãa ch·ªâ"
                className={`w-full p-2 border rounded-lg focus:ring-2 focus:outline-none ${
                  errors.address
                    ? "border-red focus:ring-red"
                    : "border-gray-300 focus:ring-main"
                }`}
              />
              {errors.address && (
                <p className="text-red text-sm mt-1">{errors.address}</p>
              )}
            </div>

            {/* N·ªôi dung */}
            <div>
              <textarea
                name="message"
                value={formData.message}
                onChange={handleChange}
                placeholder="N·ªôi dung"
                rows="5"
                className={`w-full p-2 border rounded-lg focus:ring-2 focus:outline-none ${
                  errors.message
                    ? "border-red focus:ring-red"
                    : "border-gray-300 focus:ring-main"
                }`}
              ></textarea>
              {errors.message && (
                <p className="text-red text-sm mt-1">{errors.message}</p>
              )}
            </div>

            {/* N√∫t g·ª≠i */}
            <button
              type="submit"
              className="w-full bg-main text-white font-semibold py-3 rounded-lg hover:bg-blue-600 focus:ring-2 focus:ring-main focus:outline-none"
            >
              G·ª≠i
            </button>
          </form>
        </div>
      </div>
    </div>
  );
}
