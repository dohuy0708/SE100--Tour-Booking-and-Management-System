{"version":3,"file":"index.js","sources":["../../node_modules/tslib/tslib.es6.js","../../node_modules/style-inject/dist/style-inject.es.js","../../src/package/signify-devTool/index.tsx","../../src/package/utils/cookies.ts","../../src/package/singify-cache/index.ts","../../src/package/utils/objectClone.ts","../../src/package/utils/objectCompare.ts","../../src/package/signify-core/signify.core.ts","../../src/package/signify-core/index.ts","../../src/package/signify-sync/index.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { ElementRef, memo, MouseEvent, useCallback, useEffect, useLayoutEffect, useRef } from 'react';\r\nimport { HardWrapCore } from '../signify-core/signify.core';\r\nimport { getCookie, setCookie } from '../utils/cookies';\r\nimport './index.css';\r\n\r\nlet index = 100;\r\n\r\nconst getRandomPastelColor = () => {\r\n    const r = Math.floor(Math.random() * 128),\r\n        g = Math.floor(Math.random() * 128),\r\n        b = Math.floor(Math.random() * 128);\r\n    return `rgb(${r}, ${g}, ${b})`;\r\n};\r\n\r\ntype TDevtool<T> = { name: string; pick?: (n: T) => any; color?: string };\r\n\r\nexport const devTool = <T,>(HardWrap: ReturnType<typeof HardWrapCore<T>>) =>\r\n    memo(\r\n        ({ name, pick = n => n, color }: TDevtool<T>) => {\r\n            const popup = useRef<HTMLDivElement | null>(null);\r\n            let nameCookies = `rs-${name}`,\r\n                isDragging = false,\r\n                isResizing = false,\r\n                offsetX = 0,\r\n                offsetY = 0,\r\n                renderCount = 0;\r\n\r\n            useLayoutEffect(() => {\r\n                if (popup.current) {\r\n                    const { x, y, h, w }: { [key: string]: string } = JSON.parse(getCookie(nameCookies) ?? '{}');\r\n                    x && (popup.current.style.left = x);\r\n                    y && (popup.current.style.top = y);\r\n                    w && (popup.current.style.width = w);\r\n                    h && (popup.current.style.height = h);\r\n                }\r\n            }, []);\r\n\r\n            useEffect(() => {\r\n                const mouseMove = (e: globalThis.MouseEvent) => {\r\n                    if (isDragging && popup.current) {\r\n                        popup.current.style.left = `${e.clientX - offsetX}px`;\r\n                        popup.current.style.top = `${e.clientY - offsetY}px`;\r\n                    }\r\n\r\n                    if (isResizing && popup.current) {\r\n                        const rect = popup.current.getBoundingClientRect();\r\n\r\n                        const newWidth = e.clientX - rect.left,\r\n                            newHeight = e.clientY - rect.top;\r\n\r\n                        if (newWidth > 100) {\r\n                            popup.current.style.width = `${newWidth + 10}px`;\r\n                        }\r\n\r\n                        if (newHeight > 100) {\r\n                            popup.current.style.height = `${newHeight + 10}px`;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                const mouseUp = () => {\r\n                    isDragging = false;\r\n                    isResizing = false;\r\n                    document.body.style.cursor = 'default';\r\n                    if (popup.current) {\r\n                        setCookie(\r\n                            nameCookies,\r\n                            JSON.stringify({\r\n                                x: popup.current.style.left,\r\n                                y: popup.current.style.top,\r\n                                w: popup.current.style.width,\r\n                                h: popup.current.style.height\r\n                            })\r\n                        );\r\n                    }\r\n                };\r\n\r\n                document.addEventListener('mousemove', mouseMove);\r\n                document.addEventListener('mouseup', mouseUp);\r\n\r\n                return () => {\r\n                    document.removeEventListener('mousemove', mouseMove);\r\n                    document.removeEventListener('mouseup', mouseUp);\r\n                };\r\n            }, []);\r\n\r\n            const headerMouseDown = useCallback(({ clientX, clientY }: { clientX: number; clientY: number }) => {\r\n                if (popup.current) {\r\n                    isDragging = true;\r\n                    popup.current.style.zIndex = `${index++}`;\r\n                    offsetX = clientX - popup.current?.offsetLeft;\r\n                    offsetY = clientY - popup.current?.offsetTop;\r\n                }\r\n            }, []);\r\n\r\n            const resizeMouseDown = useCallback((e: MouseEvent<ElementRef<'div'>>) => {\r\n                isResizing = true;\r\n                document.body.style.cursor = 'se-resize';\r\n                e.preventDefault();\r\n            }, []);\r\n\r\n            const handleFontSize = useCallback(\r\n                (isUp: boolean) => () => {\r\n                    if (popup.current) {\r\n                        if (!popup.current.style.fontSize) {\r\n                            popup.current.style.fontSize = '12px';\r\n                        }\r\n                        popup.current.style.fontSize = Number(popup.current.style.fontSize.replace('px', '')) + (isUp ? 2 : -2) + 'px';\r\n                    }\r\n                },\r\n                []\r\n            );\r\n\r\n            const syntaxHighlight = useCallback((json: string) => {\r\n                if (typeof json != 'string') {\r\n                    json = JSON.stringify(json, undefined, 2);\r\n                }\r\n                json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n                // eslint-disable-next-line\r\n                return json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\ $^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g, function (match) {\r\n                    let cls = 'number';\r\n                    if (/^\"/.test(match)) {\r\n                        if (/:$/.test(match)) {\r\n                            cls = 'key';\r\n                        } else {\r\n                            cls = 'string';\r\n                        }\r\n                    } else if (/true|false/.test(match)) {\r\n                        cls = 'boolean';\r\n                    } else if (/null/.test(match)) {\r\n                        cls = 'null';\r\n                    }\r\n                    return '<span class=\"signify_popup_json_' + cls + '\">' + match + '</span>';\r\n                });\r\n            }, []);\r\n\r\n            return (\r\n                <div ref={popup} className=\"signify_popup\">\r\n                    <div style={{ backgroundColor: color ?? getRandomPastelColor() }} className=\"signify_popup_header\" onMouseDown={headerMouseDown}>\r\n                        <label className=\"signify_popup_header_label\">\r\n                            <HardWrap>\r\n                                {() => (\r\n                                    <>\r\n                                        {name} - {++renderCount}\r\n                                    </>\r\n                                )}\r\n                            </HardWrap>\r\n                        </label>\r\n                        <span className=\"signify_popup_header_button\" onClick={handleFontSize(true)} dangerouslySetInnerHTML={{ __html: '&bigtriangleup;' }}></span>\r\n                        <span className=\"signify_popup_header_button\" onClick={handleFontSize(false)} dangerouslySetInnerHTML={{ __html: '&bigtriangledown;' }}></span>\r\n                    </div>\r\n                    <HardWrap>{(n: T) => <pre className=\"signify_popup_json_viewer\" dangerouslySetInnerHTML={{ __html: syntaxHighlight(JSON.stringify(pick(n), null, 2)) }}></pre>}</HardWrap>\r\n\r\n                    <div onMouseDown={resizeMouseDown} className=\"signify_popup_resizer\"></div>\r\n                </div>\r\n            );\r\n        },\r\n        () => true\r\n    );\r\n","function setCookie(cname: string, cvalue: string, exdays: number = 30) {\r\n    const d = new Date();\r\n    d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\r\n    let expires = 'expires=' + d.toUTCString();\r\n    document.cookie = cname + '=' + cvalue + ';' + expires + ';path=/';\r\n}\r\n\r\nfunction getCookie(cname: string) {\r\n    let name = cname + '=',\r\n        decodedCookie = decodeURIComponent(document.cookie),\r\n        ca = decodedCookie.split(';');\r\n\r\n    for (let i = 0; i < ca.length; i++) {\r\n        let c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport { getCookie, setCookie };\r\n","import { TCacheConfig, TCacheSolution } from './cache.model';\r\n\r\n// Define a cache solution object that maps cache types to their respective storage mechanisms\r\nconst cacheSolution: TCacheSolution = {\r\n    LocalStorage: localStorage, // Using the localStorage API for persistent storage\r\n    SesionStorage: sessionStorage // Using the sessionStorage API for temporary storage\r\n};\r\n\r\n/**\r\n * Retrieves the initial value from either LocalStorage or SessionStorage based on the provided cache configuration.\r\n * If the value is not found in the specified storage, it sets the initial value in the storage.\r\n *\r\n * @param initialValue - The initial value to be stored if no cached value exists.\r\n * @param cacheInfo - An optional configuration object that includes:\r\n *                    - key: The key under which the value is stored in the cache.\r\n *                    - type: The type of storage to use ('LocalStorage' or 'SesionStorage').\r\n * @returns The retrieved value from cache or the initial value if no cached value exists.\r\n */\r\nexport const getInitialValue = <T>(initialValue: T, cacheInfo?: TCacheConfig): T => {\r\n    if (cacheInfo?.key) {\r\n        const mainType = cacheInfo?.type ?? 'LocalStorage', // Default to LocalStorage if no type is provided\r\n            tempValue = cacheSolution[mainType].getItem(cacheInfo.key); // Retrieve item from storage\r\n\r\n        if (tempValue) {\r\n            return JSON.parse(tempValue); // Return parsed value if found in storage\r\n        }\r\n\r\n        // Set initial value in storage if not found\r\n        cacheSolution[mainType].setItem(cacheInfo.key, JSON.stringify(initialValue));\r\n    }\r\n\r\n    return initialValue; // Return a deep copy of the initial value\r\n};\r\n\r\n/**\r\n * Updates the stored value in the specified cache configuration.\r\n * If the key is provided in cacheInfo, it updates the corresponding storage with the new value.\r\n *\r\n * @param newValue - The new value to be stored in the cache.\r\n * @param cacheInfo - An optional configuration object that includes:\r\n *                    - key: The key under which the new value will be stored.\r\n *                    - type: The type of storage to use ('LocalStorage' or 'SesionStorage').\r\n */\r\nexport const cacheUpdateValue = <T>(newValue: T, cacheInfo?: TCacheConfig) => {\r\n    if (cacheInfo?.key) {\r\n        // Update item in specified storage\r\n        cacheSolution[cacheInfo?.type ?? 'LocalStorage'].setItem(cacheInfo.key, JSON.stringify(newValue));\r\n    }\r\n};\r\n","// Function to create a copy of a Buffer or ArrayBuffer view\r\nconst copyBuffer = (cur: any) => {\r\n    // Check if the current object is an instance of Buffer\r\n    if (cur instanceof Buffer) {\r\n        // Return a new Buffer from the current one\r\n        return Buffer.from(cur);\r\n    }\r\n\r\n    // For other ArrayBuffer views, create a new instance using the constructor and provide the buffer slice\r\n    return new cur.constructor(cur.buffer.slice(), cur.byteOffset, cur.length);\r\n};\r\n\r\n// Main function to deep clone an object with options\r\nexport const deepClone = (opts: any) => {\r\n    // Map to hold custom constructors and their cloning functions\r\n    const constructorHandlers = new Map();\r\n    // Add a handler for Date objects\r\n    constructorHandlers.set(Date, (o: any) => new Date(o));\r\n    // Add a handler for Map objects\r\n    constructorHandlers.set(Map, (o: any, fn: any) => new Map(cloneArray(Array.from(o), fn)));\r\n    // Add a handler for Set objects\r\n    constructorHandlers.set(Set, (o: any, fn: any) => new Set(cloneArray(Array.from(o), fn)));\r\n\r\n    // If additional constructor handlers are provided in options, add them to the map\r\n    if (opts.constructorHandlers) {\r\n        for (const handler of opts.constructorHandlers) {\r\n            constructorHandlers.set(handler[0], handler[1]);\r\n        }\r\n    }\r\n\r\n    // Function to clone an array using the cloning function provided\r\n    const cloneArray = (a: any, fn: any) => {\r\n        // Get the keys of the array\r\n        const keys = Object.keys(a);\r\n        // Create a new array to hold cloned values\r\n        const a2 = new Array(keys.length);\r\n        // Iterate over each key in the original array\r\n        for (let i = 0; i < keys.length; i++) {\r\n            const k: any = keys[i];\r\n            const cur = a[k];\r\n            // If the current item is not an object or is null, copy it directly\r\n            if (typeof cur !== 'object' || cur === null) {\r\n                a2[k] = cur;\r\n            }\r\n            // If there's a custom handler for the current object's constructor, use it\r\n            else if (cur.constructor !== Object && constructorHandlers.get(cur.constructor)) {\r\n                a2[k] = constructorHandlers.get(cur.constructor)(cur, fn);\r\n            }\r\n            // If it's an ArrayBuffer view, use copyBuffer to create a copy\r\n            else if (ArrayBuffer.isView(cur)) {\r\n                a2[k] = copyBuffer(cur);\r\n            }\r\n            // Otherwise, recursively clone the item\r\n            else {\r\n                a2[k] = fn(cur);\r\n            }\r\n        }\r\n        return a2;\r\n    };\r\n\r\n    // Function to clone an object recursively\r\n    const clone = (o: any) => {\r\n        // If the input is not an object or is null, return it directly\r\n        if (typeof o !== 'object' || o === null) return o;\r\n        // If it's an array, use cloneArray to handle cloning\r\n        if (Array.isArray(o)) return cloneArray(o, clone);\r\n        // If there's a custom handler for the object's constructor, use it\r\n        if (o.constructor !== Object && constructorHandlers.get(o.constructor)) {\r\n            return constructorHandlers.get(o.constructor)(o, clone);\r\n        }\r\n        // Create an empty object to hold cloned properties\r\n        const o2: any = {};\r\n        // Iterate over each property in the original object\r\n        for (const k in o) {\r\n            // Skip properties that are not directly on the object\r\n            if (Object.hasOwnProperty.call(o, k) === false) continue;\r\n            const cur = o[k];\r\n            // If the current property is not an object or is null, copy it directly\r\n            if (typeof cur !== 'object' || cur === null) {\r\n                o2[k] = cur;\r\n            }\r\n            // If there's a custom handler for the current property's constructor, use it\r\n            else if (cur.constructor !== Object && constructorHandlers.get(cur.constructor)) {\r\n                o2[k] = constructorHandlers.get(cur.constructor)(cur, clone);\r\n            }\r\n            // If it's an ArrayBuffer view, use copyBuffer to create a copy\r\n            else if (ArrayBuffer.isView(cur)) {\r\n                o2[k] = copyBuffer(cur);\r\n            }\r\n            // Otherwise, recursively clone the property\r\n            else {\r\n                o2[k] = clone(cur);\r\n            }\r\n        }\r\n        return o2;\r\n    };\r\n\r\n    // Start the cloning process with the given options\r\n    return clone(opts);\r\n};\r\n","// Function to check if two values are equal\r\nexport const deepCompare = (a: any, b: any) => {\r\n    // If both values are strictly equal, return true\r\n    if (a === b) return true;\r\n\r\n    // Check if both values are objects\r\n    if (a && b && typeof a == 'object' && typeof b == 'object') {\r\n        // If the constructors of both objects are different, return false\r\n        if (a.constructor !== b.constructor) return false;\r\n\r\n        var length, i, keys;\r\n\r\n        // Check if both values are arrays\r\n        if (Array.isArray(a)) {\r\n            length = a.length;\r\n            // If the lengths of the arrays are different, return false\r\n            if (length != b.length) return false;\r\n            // Recursively check each element in the arrays\r\n            for (i = length; i-- !== 0; ) if (!deepCompare(a[i], b[i])) return false;\r\n            return true;\r\n        }\r\n\r\n        // Check for RegExp equality\r\n        if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\r\n\r\n        // Check for valueOf method equality\r\n        if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\r\n\r\n        // Check for toString method equality\r\n        if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\r\n\r\n        // Get the keys of the first object\r\n        keys = Object.keys(a);\r\n        length = keys.length;\r\n        // If the number of keys in both objects is different, return false\r\n        if (length !== Object.keys(b).length) return false;\r\n\r\n        // Check that all keys in the first object exist in the second object\r\n        for (i = length; i-- !== 0; ) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\r\n\r\n        // Recursively check each key-value pair for equality\r\n        for (i = length; i-- !== 0; ) {\r\n            var key = keys[i];\r\n            if (!deepCompare(a[key], b[key])) return false;\r\n        }\r\n\r\n        return true; // All checks passed, the objects are equal\r\n    }\r\n\r\n    // Check for NaN equality (both values are NaN)\r\n    return a !== a && b !== b;\r\n};\r\n","import React, { DependencyList, memo, useLayoutEffect, useState } from 'react';\r\nimport { TConvertValueCb, TGetValueCb, TListeners, TUseValueCb, TWrapProps } from './signify.model';\r\n\r\n/**\r\n * watchCore is a custom hook that subscribes to a set of listeners.\r\n * It allows the provided callback to be invoked whenever the state changes.\r\n * The listeners will be cleaned up when the component unmounts or dependencies change.\r\n *\r\n * @param listeners - A collection of listeners for state changes.\r\n * @returns A function that takes a callback and an optional dependency array.\r\n */\r\nexport const watchCore =\r\n    <T>(listeners: TListeners<T>) =>\r\n    (callback: TUseValueCb<T>, deps?: DependencyList) => {\r\n        useLayoutEffect(() => {\r\n            listeners.add(callback);\r\n\r\n            return () => {\r\n                listeners.delete(callback);\r\n            };\r\n        }, deps ?? []);\r\n    };\r\n\r\n/**\r\n * useCore is a custom hook that retrieves a value from the state and triggers\r\n * a re-render when the value changes. It allows you to transform the retrieved\r\n * value using a provided conversion function.\r\n *\r\n * @param listeners - A collection of listeners for state changes.\r\n * @param getValue - A function to retrieve the current value from the state.\r\n * @returns A function that takes an optional value conversion function.\r\n */\r\nexport const useCore =\r\n    <T>(listeners: TListeners<T>, getValue: () => T) =>\r\n    <P = undefined>(pickValue: TConvertValueCb<T, P> = v => v as Readonly<P>) => {\r\n        const trigger = useState({})[1];\r\n\r\n        useLayoutEffect(() => {\r\n            const listener = () => trigger({});\r\n            listeners.add(listener);\r\n\r\n            return () => {\r\n                listeners.delete(listener);\r\n            };\r\n        }, []);\r\n\r\n        return pickValue(getValue()) as P extends undefined ? T : P;\r\n    };\r\n\r\n/**\r\n * htmlCore is a utility function that creates a React element by invoking\r\n * the provided value retrieval function. This is useful for rendering\r\n * values directly in a functional component.\r\n *\r\n * @param u - A function that retrieves the current value.\r\n * @returns A React element containing the rendered value.\r\n */\r\n//@ts-ignore\r\nexport const htmlCore = <T>(u: TGetValueCb<T>) => React.createElement(() => u());\r\n\r\n/**\r\n * WrapCore is a higher-order component that wraps its children with the\r\n * current value retrieved from the provided function.\r\n *\r\n * @param u - A function that retrieves the current value.\r\n * @returns A component that renders its children with the current value.\r\n *\r\n * @example\r\n * const getValue = () => 'Wrapped Value';\r\n * const WrappedComponent = WrapCore(getValue);\r\n */\r\nexport const WrapCore =\r\n    <T>(u: TGetValueCb<T>) =>\r\n    ({ children }: TWrapProps<T>) =>\r\n        children(u());\r\n\r\n/**\r\n * HardWrapCore is a memoized version of WrapCore that optimizes rendering\r\n * by preventing unnecessary updates. It uses shallow comparison to determine\r\n * if the component should re-render.\r\n *\r\n * @param u - A function that retrieves the current value.\r\n * @returns A memoized component that wraps its children with the current value.\r\n */\r\nexport const HardWrapCore = <T>(u: TGetValueCb<T>) => memo(WrapCore<T>(u), () => true) as ReturnType<typeof WrapCore<T>>;\r\n","import { devTool } from '../signify-devTool';\r\nimport { syncSystem } from '../signify-sync';\r\nimport { cacheUpdateValue, getInitialValue } from '../singify-cache';\r\nimport { deepClone } from '../utils/objectClone';\r\nimport { deepCompare } from '../utils/objectCompare';\r\nimport { HardWrapCore, WrapCore, htmlCore, useCore, watchCore } from './signify.core';\r\nimport { TConditionRendering, TConditionUpdate as TConditionUpdating, TListeners, TOmitHtml, TSetterCallback, TSignifyConfig, TUseValueCb } from './signify.model';\r\n\r\n/**\r\n * Signify class for managing a reactive state in a React environment.\r\n *\r\n * This class encapsulates the state management logic, providing features such\r\n * as synchronization with external systems, conditional updates and rendering,\r\n * and various utilities to interact with the state.\r\n *\r\n * @template T - Type of the state value.\r\n */\r\nclass Signify<T = unknown> {\r\n    #isRender = true; // Indicates whether the component should re-render.\r\n    #initialValue: T; // Stores the initial value of the state.\r\n    #value: T; // Current value of the state.\r\n    #config?: TSignifyConfig; // Configuration options for Signify.\r\n    #listeners: TListeners<T> = new Set(); // Listeners for state changes.\r\n    #syncSetter?: TUseValueCb<T>; // Function to synchronize state externally.\r\n    #conditionUpdating?: TConditionUpdating<T>; // Condition for updating the state.\r\n    #conditionRendering?: TConditionRendering<T>; // Condition for rendering.\r\n\r\n    /**\r\n     * Constructor to initialize the Signify instance with an initial value and optional configuration.\r\n     *\r\n     * @param initialValue - The initial value of the state.\r\n     * @param config - Optional configuration settings for state management.\r\n     */\r\n    constructor(initialValue: T, config?: TSignifyConfig) {\r\n        this.#initialValue = initialValue; // set initial value.\r\n        this.#value = getInitialValue(deepClone(initialValue), config?.cache); // Get initial value considering caching.\r\n        this.#config = config;\r\n\r\n        // If synchronization is enabled, setup the sync system.\r\n        if (config?.syncKey) {\r\n            const { post, sync } = syncSystem<T>({\r\n                key: config.syncKey,\r\n                cb: data => {\r\n                    this.#value = data; // Update local state with synchronized value.\r\n                    cacheUpdateValue(this.value, this.#config?.cache); // Update cache with new value.\r\n                    this.#inform(); // Notify listeners about the state change.\r\n                }\r\n            });\r\n\r\n            this.#syncSetter = post; // Assign the sync setter function.\r\n\r\n            sync(() => this.value); // Sync on value changes.\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Inform all listeners about the current value if rendering is allowed.\r\n     */\r\n    #inform = () => {\r\n        if (this.#isRender && (!this.#conditionRendering || this.#conditionRendering(this.value))) {\r\n            this.#listeners.forEach(listener => listener(this.value)); // Notify each listener with the current value.\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Force update the current state and inform listeners of the change.\r\n     *\r\n     * @param value - New value to set.\r\n     */\r\n    #forceUpdate = (value?: T) => {\r\n        if (value !== undefined) {\r\n            this.#value = value; // Update current value.\r\n        }\r\n        cacheUpdateValue(this.value, this.#config?.cache); // Update cache if applicable.\r\n        this.#syncSetter?.(this.value); // Synchronize with external system if applicable.\r\n        this.#inform(); // Notify listeners about the new value.\r\n    };\r\n\r\n    /**\r\n     * Getter for obtaining the current value of the state.\r\n     */\r\n    get value(): T {\r\n        return this.#value;\r\n    }\r\n\r\n    /**\r\n     * Setter function to update the state. Can take a new value or a callback function which use to update value directly.\r\n     *\r\n     * @param v - New value or a callback to compute the new value based on current state.\r\n     */\r\n    readonly set = (v: T | TSetterCallback<T>) => {\r\n        let tempVal: T;\r\n\r\n        if (typeof v === 'function') {\r\n            let params = { value: deepClone(this.#value) };\r\n            (v as TSetterCallback<T>)(params); // Determine new value.\r\n            tempVal = params.value;\r\n        } else {\r\n            tempVal = v; // Determine new value.\r\n        }\r\n\r\n        // Check if the new value is different and meets update conditions before updating.\r\n        if (!deepCompare(this.value, tempVal) && (!this.#conditionUpdating || this.#conditionUpdating(this.value, tempVal))) {\r\n            this.#forceUpdate(tempVal); // Perform forced update if conditions are satisfied.\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Stops rendering updates for this instance.\r\n     */\r\n    readonly stop = () => {\r\n        this.#isRender = false; // Disable rendering updates.\r\n    };\r\n\r\n    /**\r\n     * Resumes rendering updates for this instance.\r\n     */\r\n    readonly resume = () => {\r\n        this.#isRender = true; // Enable rendering updates.\r\n        this.#inform(); // Notify listeners of any current value changes.\r\n    };\r\n\r\n    /**\r\n     * Resets the state back to its initial value.\r\n     */\r\n    readonly reset = () => {\r\n        this.#forceUpdate(deepClone(this.#initialValue)); // Reset to initial value.\r\n    };\r\n\r\n    /**\r\n     * Sets a condition for updating the state. The callback receives previous and new values and returns a boolean indicating whether to update.\r\n     *\r\n     * @param cb - Callback function for determining update conditions.\r\n     */\r\n    readonly conditionUpdating = (cb: TConditionUpdating<T>) => (this.#conditionUpdating = cb);\r\n\r\n    /**\r\n     * Sets a condition for rendering. The callback receives the current value and returns a boolean indicating whether to render.\r\n     *\r\n     * @param cb - Callback function for determining render conditions.\r\n     */\r\n    readonly conditionRendering = (cb: TConditionRendering<T>) => (this.#conditionRendering = cb);\r\n\r\n    /**\r\n     * Function to use the current value in components. This provides reactivity to component updates based on state changes.\r\n     */\r\n    readonly use = useCore(this.#listeners, () => this.value);\r\n\r\n    /**\r\n     * Function to watch changes on state and notify listeners accordingly.\r\n     */\r\n    readonly watch = watchCore(this.#listeners);\r\n\r\n    /**\r\n     * Generates HTML output from the use function to render dynamic content based on current state.\r\n     */\r\n    readonly html = htmlCore(this.use);\r\n\r\n    /**\r\n     * A wrapper component that allows for rendering based on current state while managing reactivity efficiently.\r\n     */\r\n    readonly Wrap = WrapCore(this.use);\r\n\r\n    /**\r\n     * A hard wrapper component that provides additional control over rendering and avoids unnecessary re-renders in parent components.\r\n     */\r\n    readonly HardWrap = HardWrapCore(this.use);\r\n\r\n    /**\r\n     * Creates a sliced version of the state by applying a function to derive a part of the current value.\r\n     *\r\n     * @param pick - Function that extracts a portion of the current value.\r\n     */\r\n    readonly slice = <P>(pick: (v: T) => P) => {\r\n        let _value: P = pick(this.value), // Extracted portion of the current state.\r\n            _isRender = true, // Flag to manage rendering for sliced values.\r\n            _conditionRendering: TConditionRendering<P> | undefined; // Condition for rendering sliced values.\r\n        const listeners: TListeners<P> = new Set(), // Listeners for sliced values.\r\n            _inform = () => {\r\n                const temp = pick(this.value); // Get new extracted portion of the state.\r\n                if (_isRender && (!_conditionRendering || _conditionRendering(temp))) {\r\n                    _value = temp; // Update sliced value if conditions are met.\r\n                    listeners.forEach(listener => listener(temp)); // Notify listeners of sliced value change.\r\n                }\r\n            },\r\n            use = useCore(listeners, () => _value), // Core function for reactivity with sliced values.\r\n            control = {\r\n                value: _value,\r\n                use,\r\n                watch: watchCore(listeners), // Watch changes for sliced values.\r\n                html: htmlCore(use), // Generate HTML output for sliced values.\r\n                Wrap: WrapCore(use), // Wrapper component for sliced values with reactivity.\r\n                HardWrap: HardWrapCore(use), // Hard wrapper component for more control over rendering of sliced values.\r\n                stop: () => (_isRender = false), // Stop rendering updates for sliced values.\r\n                resume: () => {\r\n                    _isRender = true; // Resume rendering updates for sliced values.\r\n                    _inform(); // Inform listeners about any changes after resuming.\r\n                },\r\n                conditionRendering: (cb: TConditionRendering<P>) => (_conditionRendering = cb), // Set condition for rendering sliced values.\r\n                DevTool: devTool(HardWrapCore(use)) // Devtool component of slice\r\n            };\r\n\r\n        // Add a listener to inform when the original state changes affecting the sliced output.\r\n        this.#listeners.add(() => {\r\n            if (!deepCompare(pick(this.value), _value)) {\r\n                _inform(); // Trigger inform if sliced output has changed due to original state change.\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(control, 'value', {\r\n            get: () => _value, // Getter for accessing sliced value directly.\r\n            enumerable: false,\r\n            configurable: false\r\n        });\r\n\r\n        return control as TOmitHtml<P, typeof control>; // Return control object without HTML methods exposed directly.\r\n    };\r\n\r\n    /**\r\n     * Devtool component of signify\r\n     */\r\n    readonly DevTool = devTool(this.HardWrap);\r\n}\r\n\r\n/**\r\n * ReactSignify\r\n * -\r\n * @link https://reactsignify.dev\r\n * @description\r\n * Factory function to create a new Signify instance with an initial value and optional configuration settings.\r\n *\r\n * @template T - Type of the initial state value.\r\n * @param initialValue - The initial value to start with in Signify instance.\r\n * @param config - Optional configuration settings for Signify instance behavior.\r\n *\r\n * @returns A new instance of Signify configured with provided initial settings.\r\n */\r\nexport const signify = <T>(initialValue: T, config?: TSignifyConfig): TOmitHtml<T, Signify<T>> => new Signify(initialValue, config);\r\n","/**\r\n * Creates a synchronization system using BroadcastChannel.\r\n * This function allows you to establish communication between different browser contexts by sending messages\r\n * and synchronizing state changes.\r\n *\r\n * @template T - The type of data to be synchronized.\r\n * @param {Object} params - The parameters for the syncSystem function.\r\n * @param {string} params.key - A unique identifier for the broadcast channel.\r\n * @param {function} params.cb - A callback function that will be invoked\r\n *                                whenever a new message is received.\r\n * @returns\r\n *    - An object containing the following methods:\r\n *    - post(data: T): Sends the provided data to the BroadcastChannel.\r\n *    - sync(getData: () => T): Synchronizes the current data with other contexts by posting the data when\r\n *      a message is received on a global BroadcastChannel.\r\n */\r\nexport const syncSystem = <T>({ key, cb }: { key: string; cb(val: T): void }) => {\r\n    const mainKey = `bc_${key}`,\r\n        bc = new BroadcastChannel(mainKey);\r\n\r\n    bc.onmessage = e => cb(e.data);\r\n\r\n    return {\r\n        post: (data: T) => {\r\n            bc.postMessage(data);\r\n        },\r\n        sync: (getData: () => T) => {\r\n            const bcs = new BroadcastChannel(`bcs`);\r\n            bcs.onmessage = e => mainKey === e.data && bc.postMessage(getData());\r\n            bcs.postMessage(mainKey);\r\n        }\r\n    };\r\n};\r\n"],"names":["__classPrivateFieldGet","receiver","state","kind","f","TypeError","has","call","value","get","__classPrivateFieldSet","set","SuppressedError","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","index","devTool","HardWrap","memo","name","pick","n","color","popup","useRef","nameCookies","isDragging","isResizing","offsetX","offsetY","renderCount","useLayoutEffect","current","x","y","h","w","JSON","parse","cname","ca","decodeURIComponent","cookie","split","i","length","c","charAt","substring","indexOf","getCookie","_a","left","top","width","height","useEffect","mouseMove","e","clientX","clientY","rect","getBoundingClientRect","newWidth","newHeight","mouseUp","body","cursor","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","setCookie","stringify","addEventListener","removeEventListener","headerMouseDown","useCallback","zIndex","offsetLeft","_b","offsetTop","resizeMouseDown","preventDefault","handleFontSize","isUp","fontSize","Number","replace","syntaxHighlight","json","undefined","match","cls","test","_jsxs","className","backgroundColor","Math","floor","random","onMouseDown","_jsx","jsx","children","_Fragment","onClick","dangerouslySetInnerHTML","__html","cacheSolution","LocalStorage","localStorage","SesionStorage","sessionStorage","cacheUpdateValue","newValue","cacheInfo","key","setItem","copyBuffer","cur","Buffer","from","constructor","buffer","slice","byteOffset","deepClone","opts","constructorHandlers","Map","o","fn","cloneArray","Array","Set","handler","a","keys","Object","a2","k","ArrayBuffer","isView","clone","isArray","o2","hasOwnProperty","deepCompare","b","RegExp","source","flags","valueOf","prototype","toString","watchCore","listeners","callback","deps","add","delete","useCore","getValue","pickValue","v","trigger","useState","listener","htmlCore","u","React","WrapCore","HardWrapCore","Signify","initialValue","config","_Signify_isRender","this","_Signify_initialValue","_Signify_value","_Signify_config","_Signify_listeners","_Signify_syncSetter","_Signify_conditionUpdating","_Signify_conditionRendering","_Signify_inform","forEach","_Signify_forceUpdate","cache","tempVal","params","stop","resume","reset","conditionUpdating","cb","conditionRendering","use","watch","html","Wrap","_conditionRendering","_value","_isRender","_inform","temp","control","DevTool","defineProperty","enumerable","configurable","mainType","tempValue","getItem","getInitialValue","syncKey","post","sync","mainKey","bc","BroadcastChannel","onmessage","data","postMessage","getData","bcs","syncSystem"],"mappings":"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","x_google_ignoreList":[0,1]}